=begin
#FreeClimb API

#FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.3.0-SNAPSHOT

=end

require 'spec_helper'
require 'json'

# Unit tests for Freeclimb::DefaultApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @api_instance = Freeclimb::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@api_instance).to be_instance_of(Freeclimb::DefaultApi)
    end
  end

  # unit tests for get_an_account
  # Get an Account
  # @param [Hash] opts the optional parameters
  # @return [AccountResult]
  describe 'get_an_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for buy_a_phone_number
  # Buy a Phone Number
  # @param buy_incoming_number_request Incoming Number transaction details
  # @param [Hash] opts the optional parameters
  # @return [IncomingNumberResult]
  describe 'buy_a_phone_number test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_a_conference
  # Create a Conference
  # @param [Hash] opts the optional parameters
  # @option opts [CreateConferenceRequest] :create_conference_request Conference to create
  # @return [ConferenceResult]
  describe 'create_a_conference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_a_queue
  # Create a Queue
  # @param [Hash] opts the optional parameters
  # @option opts [QueueRequest] :queue_request Queue details used to create a queue
  # @return [QueueResult]
  describe 'create_a_queue test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_an_application
  # Create an application
  # @param [Hash] opts the optional parameters
  # @option opts [ApplicationRequest] :application_request Application Details
  # @return [ApplicationResult]
  describe 'create_an_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_a_recording
  # Delete a Recording
  # @param recording_id String that uniquely identifies this recording resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_a_recording test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_an_application
  # Delete an application
  # @param application_id String that uniquely identifies this application resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_an_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_an_incoming_number
  # Delete an Incoming Number
  # @param phone_number_id String that uniquely identifies this phone number resource.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_an_incoming_number test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dequeue_a_member
  # Dequeue a Member
  # @param queue_id String that uniquely identifies the Queue that the Member belongs to.
  # @param call_id ID if the Call that the Member belongs to
  # @param [Hash] opts the optional parameters
  # @return [QueueMember]
  describe 'dequeue_a_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for dequeue_head_member
  # Dequeue Head Member
  # @param queue_id String that uniquely identifies this queue resource.
  # @param [Hash] opts the optional parameters
  # @return [QueueMember]
  describe 'dequeue_head_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for download_a_recording_file
  # Download a Recording File
  # @param recording_id String that uniquely identifies this recording resource.
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'download_a_recording_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for filter_logs
  # Filter Logs
  # @param filter_logs_request Filter logs request paramters
  # @param [Hash] opts the optional parameters
  # @return [LogList]
  describe 'filter_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_call
  # Get a Call
  # @param call_id String that uniquely identifies this call resource.
  # @param [Hash] opts the optional parameters
  # @return [CallResult]
  describe 'get_a_call test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_conference
  # Get a Conference
  # @param conference_id A string that uniquely identifies this conference resource.
  # @param [Hash] opts the optional parameters
  # @return [ConferenceResult]
  describe 'get_a_conference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_member
  # Get a Member
  # @param queue_id String that uniquely identifies the Queue that the Member belongs to.
  # @param call_id ID of the Call that the Member belongs to
  # @param [Hash] opts the optional parameters
  # @return [QueueMember]
  describe 'get_a_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_participant
  # Get a Participant
  # @param conference_id ID of the conference this participant is in.
  # @param call_id ID of the Call associated with this participant.
  # @param [Hash] opts the optional parameters
  # @return [ConferenceParticipantResult]
  describe 'get_a_participant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_queue
  # Get a Queue
  # @param queue_id A string that uniquely identifies this queue resource.
  # @param [Hash] opts the optional parameters
  # @return [QueueResult]
  describe 'get_a_queue test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_a_recording
  # Get a Recording
  # @param recording_id String that uniquely identifies this recording resource.
  # @param [Hash] opts the optional parameters
  # @return [RecordingResult]
  describe 'get_a_recording test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_an_application
  # Get an Application
  # @param application_id A string that uniquely identifies this application resource.
  # @param [Hash] opts the optional parameters
  # @return [ApplicationResult]
  describe 'get_an_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_an_incoming_number
  # Get an Incoming Number
  # @param phone_number_id String that uniquely identifies this phone number resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :region State or province of this phone number.
  # @option opts [String] :country Country of this phone number.
  # @option opts [Boolean] :voice_enabled Indicates whether the phone number can handle Calls. Typically set to true for all numbers.
  # @option opts [Boolean] :sms_enabled Indication of whether the phone number can handle sending and receiving SMS messages. Typically set to true for all numbers.
  # @option opts [String] :application_id ID of the Application that FreeClimb should contact if a Call or SMS arrives for this phone number or a Call from this number is placed. An incoming phone number is not useful until associated with an applicationId.
  # @option opts [Boolean] :has_application Indication of whether the phone number has an application linked to it.
  # @return [IncomingNumberResult]
  describe 'get_an_incoming_number test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_an_sms_message
  # Get an SMS Message
  # @param message_id String that uniquely identifies this Message resource.
  # @param [Hash] opts the optional parameters
  # @return [MessageResult]
  describe 'get_an_sms_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_head_member
  # Get Head Member
  # @param queue_id String that uniquely identifies the Queue that the Member belongs to.
  # @param [Hash] opts the optional parameters
  # @return [QueueMember]
  describe 'get_head_member test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_active_queues
  # List Active Queues
  # @param [Hash] opts the optional parameters
  # @option opts [String] :_alias Return only the Queue resources with aliases that exactly match this name.
  # @return [QueueList]
  describe 'list_active_queues test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_all_account_logs
  # List All Account Logs
  # @param [Hash] opts the optional parameters
  # @return [LogList]
  describe 'list_all_account_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_an_application
  # List applications
  # @param [Hash] opts the optional parameters
  # @option opts [String] :_alias Return only applications with aliases that exactly match this value.
  # @return [ApplicationList]
  describe 'list_an_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_available_numbers
  # List available numbers
  # @param [Hash] opts the optional parameters
  # @option opts [String] :phone_number PCRE-compatible regular expression to filter against &#x60;phoneNumber&#x60; field, which is in E.164 format.
  # @option opts [String] :region State or province of this phone number.
  # @option opts [String] :country Country of this phone number.
  # @option opts [Boolean] :voice_enabled Indicates whether the phone number can handle Calls. Typically set to true for all numbers.
  # @option opts [Boolean] :sms_enabled Indication of whether the phone number can handle sending and receiving SMS messages. Typically set to true for all numbers.
  # @return [AvailableNumberList]
  describe 'list_available_numbers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_call_logs
  # List Call Logs
  # @param call_id String that uniquely identifies this call resource.
  # @param [Hash] opts the optional parameters
  # @return [LogList]
  describe 'list_call_logs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_call_recordings
  # List Call Recordings
  # @param call_id String that uniquely identifies this call resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :date_created Only show recordings created on the specified date, in the form *YYYY-MM-DD*.
  # @return [RecordingList]
  describe 'list_call_recordings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_calls
  # List Calls
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :active If active is set to true then all calls of the nature queued, ringing, inProgress are returned in the query.
  # @option opts [String] :to Only show Calls to this phone number.
  # @option opts [String] :from Only show Calls from this phone number.
  # @option opts [String] :status Only show Calls currently in this status. May be &#x60;queued&#x60;, &#x60;ringing&#x60;, &#x60;inProgress&#x60;, &#x60;canceled&#x60;, &#x60;completed&#x60;, &#x60;failed&#x60;, &#x60;busy&#x60;, or &#x60;noAnswer&#x60;.
  # @option opts [String] :start_time Only show Calls that started at or after this time, given as YYYY-MM-DD hh:mm:ss.
  # @option opts [String] :end_time Only show Calls that ended at or before this time, given as YYYY-MM- DD hh:mm:ss.
  # @option opts [String] :parent_call_id Only show Calls spawned by the call with this ID.
  # @return [CallList]
  describe 'list_calls test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_conferences
  # List Conferences
  # @param [Hash] opts the optional parameters
  # @option opts [String] :status Only show conferences that currently have the specified status. Valid values: &#x60;empty&#x60;, &#x60;populated&#x60;, &#x60;inProgress&#x60;, or &#x60;terminated&#x60;.
  # @option opts [String] :_alias List Conferences whose alias exactly matches this string.
  # @option opts [String] :date_created Only show Conferences that were created on the specified date, in the form *YYYY-MM-DD*.
  # @option opts [String] :date_updated Only show Conferences that were last updated on the specified date, in the form *YYYY-MM-DD*.
  # @return [ConferenceList]
  describe 'list_conferences test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_incoming_numbers
  # List Incoming Numbers
  # @param [Hash] opts the optional parameters
  # @option opts [String] :phone_number Only show incoming phone number resources that match this PCRE-compatible regular expression.
  # @option opts [String] :_alias Only show incoming phone numbers with aliases that exactly match this value.
  # @return [IncomingNumberList]
  describe 'list_incoming_numbers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_members
  # List Members
  # @param queue_id String that uniquely identifies the Queue that the Member belongs to.
  # @param [Hash] opts the optional parameters
  # @return [QueueMemberList]
  describe 'list_members test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_participants
  # List Participants
  # @param conference_id ID of the conference this participant is in.
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :talk Only show Participants with the talk privilege.
  # @option opts [Boolean] :listen Only show Participants with the listen privilege.
  # @return [ConferenceParticipantList]
  describe 'list_participants test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_recordings
  # List Recordings
  # @param [Hash] opts the optional parameters
  # @option opts [String] :call_id Show only Recordings made during the Call with this ID.
  # @option opts [String] :conference_id Show only Recordings made during the conference with this ID.
  # @option opts [String] :date_created Only show Recordings created on this date, formatted as *YYYY-MM-DD*.
  # @return [RecordingList]
  describe 'list_recordings test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_sms_messages
  # List SMS Messages
  # @param [Hash] opts the optional parameters
  # @option opts [String] :to Only show Messages to this phone number.
  # @option opts [String] :from Only show Messages from this phone number.
  # @option opts [String] :begin_time Only show Messages sent at or after this time (GMT), given as *YYYY-MM-DD hh:mm:ss*.
  # @option opts [String] :end_time Only show messages sent at or before this time (GMT), given as *YYYY-MM-DD hh:mm*..
  # @option opts [String] :direction Either &#x60;inbound&#x60; or &#x60;outbound&#x60;. Only show Messages that were either *sent from* or *received by* FreeClimb.
  # @option opts [String] :account_id String that uniquely identifies this account resource.
  # @return [MessagesList]
  describe 'list_sms_messages test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for make_a_call
  # Make a Call
  # @param [Hash] opts the optional parameters
  # @option opts [MakeCallRequest] :make_call_request Call details for making a call
  # @return [CallResult]
  describe 'make_a_call test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for remove_a_participant
  # Remove a Participant
  # @param conference_id ID of the conference this participant is in.
  # @param call_id ID of the Call associated with this participant.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'remove_a_participant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for send_an_sms_message
  # Send an SMS Message
  # @param message_request Details to create a message
  # @param [Hash] opts the optional parameters
  # @return [MessageResult]
  describe 'send_an_sms_message test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for stream_a_recording_file
  # Stream a Recording File
  # @param recording_id String that uniquely identifies this recording resource.
  # @param [Hash] opts the optional parameters
  # @return [File]
  describe 'stream_a_recording_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_a_conference
  # Update a Conference
  # @param conference_id String that uniquely identifies this conference resource.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateConferenceRequest] :update_conference_request Conference Details to update
  # @return [ConferenceResult]
  describe 'update_a_conference test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_a_live_call
  # Update a Live Call
  # @param call_id String that uniquely identifies this call resource.
  # @param update_call_request Call details to update
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'update_a_live_call test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_a_participant
  # Update a Participant
  # @param conference_id ID of the conference this participant is in.
  # @param call_id ID of the Call associated with this participant.
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateConferenceParticipantRequest] :update_conference_participant_request Conference participant details to update
  # @return [ConferenceParticipantResult]
  describe 'update_a_participant test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_a_queue
  # Update a Queue
  # @param queue_id A string that uniquely identifies this Queue resource.
  # @param [Hash] opts the optional parameters
  # @option opts [QueueRequest] :queue_request Queue Details to update
  # @return [QueueResult]
  describe 'update_a_queue test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_an_account
  # Manage an account
  # @param [Hash] opts the optional parameters
  # @option opts [AccountRequest] :account_request Account details to update
  # @return [nil]
  describe 'update_an_account test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_an_application
  # Update an application
  # @param application_id A string that uniquely identifies this application resource.
  # @param [Hash] opts the optional parameters
  # @option opts [ApplicationRequest] :application_request Application details to update.
  # @return [ApplicationResult]
  describe 'update_an_application test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_an_incoming_number
  # Update an Incoming Number
  # @param phone_number_id String that uniquely identifies this phone number resource.
  # @param [Hash] opts the optional parameters
  # @option opts [IncomingNumberRequest] :incoming_number_request Incoming Number details to update
  # @return [IncomingNumberResult]
  describe 'update_an_incoming_number test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
