=begin
#FreeClimb API

#FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.

The version of the OpenAPI document: 1.0.0
Contact: support@freeclimb.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.9.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Freeclimb::SMSTenDLCBrandStockExchange
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Freeclimb::SMSTenDLCBrandStockExchange do
  let(:instance) { Freeclimb::SMSTenDLCBrandStockExchange.new }

  describe 'test an instance of SMSTenDLCBrandStockExchange' do
    it 'should create an instance of SMSTenDLCBrandStockExchange' do
      expect(instance).to be_instance_of(Freeclimb::SMSTenDLCBrandStockExchange)
    end
  end
  
  describe 'test attribute "NONE"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::NONE = "NONE" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::NONE
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("NONE")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "NONE"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::NONE
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "NASDAQ"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::NASDAQ = "NASDAQ" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::NASDAQ
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("NASDAQ")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "NASDAQ"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::NASDAQ
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "NYSE"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::NYSE = "NYSE" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::NYSE
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("NYSE")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "NYSE"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::NYSE
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "AMEX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::AMEX = "AMEX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::AMEX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("AMEX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "AMEX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::AMEX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "AMX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::AMX = "AMX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::AMX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("AMX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "AMX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::AMX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "ASX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::ASX = "ASX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::ASX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("ASX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "ASX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::ASX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "B3"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::B3 = "B3" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::B3
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("B3")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "B3"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::B3
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "BME"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::BME = "BME" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::BME
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("BME")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "BME"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::BME
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "BSE"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::BSE = "BSE" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::BSE
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("BSE")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "BSE"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::BSE
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "FRA"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::FRA = "FRA" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::FRA
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("FRA")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "FRA"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::FRA
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "ICEX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::ICEX = "ICEX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::ICEX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("ICEX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "ICEX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::ICEX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "JPX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::JPX = "JPX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::JPX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("JPX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "JPX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::JPX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "JSE"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::JSE = "JSE" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::JSE
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("JSE")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "JSE"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::JSE
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "KRX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::KRX = "KRX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::KRX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("KRX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "KRX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::KRX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "LON"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::LON = "LON" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::LON
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("LON")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "LON"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::LON
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "NSE"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::NSE = "NSE" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::NSE
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("NSE")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "NSE"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::NSE
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "OMX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::OMX = "OMX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::OMX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("OMX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "OMX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::OMX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "SEHK"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::SEHK = "SEHK" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::SEHK
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("SEHK")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "SEHK"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::SEHK
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "SGX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::SGX = "SGX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::SGX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("SGX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "SGX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::SGX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "SSE"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::SSE = "SSE" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::SSE
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("SSE")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "SSE"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::SSE
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "STO"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::STO = "STO" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::STO
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("STO")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "STO"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::STO
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "SWX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::SWX = "SWX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::SWX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("SWX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "SWX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::SWX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "SZSE"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::SZSE = "SZSE" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::SZSE
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("SZSE")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "SZSE"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::SZSE
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "TSX"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::TSX = "TSX" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::TSX
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("TSX")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "TSX"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::TSX
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "TWSE"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::TWSE = "TWSE" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::TWSE
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("TWSE")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "TWSE"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::TWSE
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "VSE"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::VSE = "VSE" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::VSE
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("VSE")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "VSE"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::VSE
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "OTHER"' do
    it 'should work' do
      expect { Freeclimb::SMSTenDLCBrandStockExchange::OTHER = "OTHER" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::SMSTenDLCBrandStockExchange::OTHER
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::build_from_hash("OTHER")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "OTHER"
      calculatedValue = Freeclimb::SMSTenDLCBrandStockExchange::OTHER
      expect(expectedValue).to eq(calculatedValue)
    end
  end

end
