=begin
#FreeClimb API

#FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.

The version of the OpenAPI document: 1.0.0
Contact: support@freeclimb.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.4.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for Freeclimb::GetSpeechReason
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Freeclimb::GetSpeechReason do
  let(:instance) { Freeclimb::GetSpeechReason.new }

  describe 'test an instance of GetSpeechReason' do
    it 'should create an instance of GetSpeechReason' do
      expect(instance).to be_instance_of(Freeclimb::GetSpeechReason)
    end
  end
  describe 'test attribute "ERROR"' do
    it 'should work' do
      expect { Freeclimb::GetSpeechReason::ERROR = "error" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::GetSpeechReason::ERROR
      calculatedValue = Freeclimb::GetSpeechReason::build_from_hash("error")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "error"
      calculatedValue = Freeclimb::GetSpeechReason::ERROR
      expect(expectedValue).to eq(calculatedValue)
    end
  end
  describe 'test attribute "HANGUP"' do
    it 'should work' do
      expect { Freeclimb::GetSpeechReason::HANGUP = "hangup" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::GetSpeechReason::HANGUP
      calculatedValue = Freeclimb::GetSpeechReason::build_from_hash("hangup")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "hangup"
      calculatedValue = Freeclimb::GetSpeechReason::HANGUP
      expect(expectedValue).to eq(calculatedValue)
    end
  end
  describe 'test attribute "DIGIT"' do
    it 'should work' do
      expect { Freeclimb::GetSpeechReason::DIGIT = "digit" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::GetSpeechReason::DIGIT
      calculatedValue = Freeclimb::GetSpeechReason::build_from_hash("digit")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "digit"
      calculatedValue = Freeclimb::GetSpeechReason::DIGIT
      expect(expectedValue).to eq(calculatedValue)
    end
  end
  describe 'test attribute "NO_INPUT"' do
    it 'should work' do
      expect { Freeclimb::GetSpeechReason::NO_INPUT = "noInput" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::GetSpeechReason::NO_INPUT
      calculatedValue = Freeclimb::GetSpeechReason::build_from_hash("noInput")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "noInput"
      calculatedValue = Freeclimb::GetSpeechReason::NO_INPUT
      expect(expectedValue).to eq(calculatedValue)
    end
  end
  describe 'test attribute "NO_MATCH"' do
    it 'should work' do
      expect { Freeclimb::GetSpeechReason::NO_MATCH = "noMatch" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::GetSpeechReason::NO_MATCH
      calculatedValue = Freeclimb::GetSpeechReason::build_from_hash("noMatch")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "noMatch"
      calculatedValue = Freeclimb::GetSpeechReason::NO_MATCH
      expect(expectedValue).to eq(calculatedValue)
    end
  end
  describe 'test attribute "RECOGNITION"' do
    it 'should work' do
      expect { Freeclimb::GetSpeechReason::RECOGNITION = "recognition" }.not_to raise_error
    end
    it 'should serialize to enum' do
      expectedValue = Freeclimb::GetSpeechReason::RECOGNITION
      calculatedValue = Freeclimb::GetSpeechReason::build_from_hash("recognition")
      expect(expectedValue).to eq(calculatedValue)
    end
    it 'should deserialize to string' do
      expectedValue = "recognition"
      calculatedValue = Freeclimb::GetSpeechReason::RECOGNITION
      expect(expectedValue).to eq(calculatedValue)
    end
  end
end
