# #FreeClimb API
#
# FreeClimb is a cloud-based application programming interface (API) that puts the power of the Vail platform in your hands. FreeClimb simplifies the process of creating applications that can use a full range of telephony features without requiring specialized or on-site telephony equipment. Using the FreeClimb REST API to write applications is easy! You have the option to use the language of your choice or hit the API directly. Your application can execute a command by issuing a RESTful request to the FreeClimb API. The base URL to send HTTP requests to the FreeClimb REST API is: /apiserver. FreeClimb authenticates and processes your request.
#
# The version of the OpenAPI document: 1.0.0
# Contact: support@freeclimb.com
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 7.9.0
#

require "spec_helper"
require "json"
require "date"
include Freeclimb

# Unit tests for Freeclimb::GetDigitsReason
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe Freeclimb::GetDigitsReason do
  let(:instance) { Freeclimb::GetDigitsReason.new }

  describe "test an instance of GetDigitsReason" do
    it "should create an instance of GetDigitsReason" do
      expect(instance).to be_instance_of(Freeclimb::GetDigitsReason)
    end
  end

  describe 'test attribute "FINISH_KEY"' do
    it "should work" do
      expect { Freeclimb::GetDigitsReason::FINISH_KEY = "finishKey" }.not_to raise_error
    end
    it "should serialize to enum" do
      expectedValue = Freeclimb::GetDigitsReason::FINISH_KEY
      calculatedValue = Freeclimb::GetDigitsReason.build_from_hash("finishKey")
      expect(expectedValue).to eq(calculatedValue)
    end
    it "should deserialize to string" do
      expectedValue = "finishKey"
      calculatedValue = Freeclimb::GetDigitsReason::FINISH_KEY
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "TIMEOUT"' do
    it "should work" do
      expect { Freeclimb::GetDigitsReason::TIMEOUT = "timeout" }.not_to raise_error
    end
    it "should serialize to enum" do
      expectedValue = Freeclimb::GetDigitsReason::TIMEOUT
      calculatedValue = Freeclimb::GetDigitsReason.build_from_hash("timeout")
      expect(expectedValue).to eq(calculatedValue)
    end
    it "should deserialize to string" do
      expectedValue = "timeout"
      calculatedValue = Freeclimb::GetDigitsReason::TIMEOUT
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "MAX_DIGITS"' do
    it "should work" do
      expect { Freeclimb::GetDigitsReason::MAX_DIGITS = "maxDigits" }.not_to raise_error
    end
    it "should serialize to enum" do
      expectedValue = Freeclimb::GetDigitsReason::MAX_DIGITS
      calculatedValue = Freeclimb::GetDigitsReason.build_from_hash("maxDigits")
      expect(expectedValue).to eq(calculatedValue)
    end
    it "should deserialize to string" do
      expectedValue = "maxDigits"
      calculatedValue = Freeclimb::GetDigitsReason::MAX_DIGITS
      expect(expectedValue).to eq(calculatedValue)
    end
  end

  describe 'test attribute "TONE"' do
    it "should work" do
      expect { Freeclimb::GetDigitsReason::TONE = "tone" }.not_to raise_error
    end
    it "should serialize to enum" do
      expectedValue = Freeclimb::GetDigitsReason::TONE
      calculatedValue = Freeclimb::GetDigitsReason.build_from_hash("tone")
      expect(expectedValue).to eq(calculatedValue)
    end
    it "should deserialize to string" do
      expectedValue = "tone"
      calculatedValue = Freeclimb::GetDigitsReason::TONE
      expect(expectedValue).to eq(calculatedValue)
    end
  end
end
